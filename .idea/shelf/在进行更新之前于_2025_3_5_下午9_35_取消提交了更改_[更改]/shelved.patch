Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"AutoImportSettings\">\r\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\r\n  </component>\r\n  <component name=\"ChangeListManager\">\r\n    <list default=\"true\" id=\"0b5e2ee8-7e60-4366-9adb-a2f4c0f8f485\" name=\"更改\" comment=\"dplearning\" />\r\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\r\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\r\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\r\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\r\n  </component>\r\n  <component name=\"Git.Settings\">\r\n    <excluded-from-favorite>\r\n      <branch-storage>\r\n        <map>\r\n          <entry type=\"REMOTE\">\r\n            <value>\r\n              <list>\r\n                <branch-info repo=\"$PROJECT_DIR$\" source=\"origin/master\" />\r\n              </list>\r\n            </value>\r\n          </entry>\r\n        </map>\r\n      </branch-storage>\r\n    </excluded-from-favorite>\r\n    <option name=\"RECENT_BRANCH_BY_REPOSITORY\">\r\n      <map>\r\n        <entry key=\"$PROJECT_DIR$\" value=\"main\" />\r\n      </map>\r\n    </option>\r\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\r\n  </component>\r\n  <component name=\"ProjectColorInfo\">{\r\n  &quot;associatedIndex&quot;: 8\r\n}</component>\r\n  <component name=\"ProjectId\" id=\"2tqYE9mVMUL6eBwlpzu3rf1AHw7\" />\r\n  <component name=\"ProjectLevelVcsManager\" settingsEditedManually=\"true\" />\r\n  <component name=\"ProjectViewState\">\r\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\r\n    <option name=\"showLibraryContents\" value=\"true\" />\r\n  </component>\r\n  <component name=\"PropertiesComponent\">{\r\n  &quot;keyToString&quot;: {\r\n    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,\r\n    &quot;git-widget-placeholder&quot;: &quot;master&quot;,\r\n    &quot;last_opened_file_path&quot;: &quot;D:/code_file&quot;,\r\n    &quot;node.js.detected.package.eslint&quot;: &quot;true&quot;,\r\n    &quot;node.js.detected.package.tslint&quot;: &quot;true&quot;,\r\n    &quot;node.js.selected.package.eslint&quot;: &quot;(autodetect)&quot;,\r\n    &quot;node.js.selected.package.tslint&quot;: &quot;(autodetect)&quot;,\r\n    &quot;nodejs_package_manager_path&quot;: &quot;npm&quot;,\r\n    &quot;vue.rearranger.settings.migration&quot;: &quot;true&quot;\r\n  },\r\n  &quot;keyToStringList&quot;: {\r\n    &quot;ChangesTree.GroupingKeys&quot;: []\r\n  }\r\n}</component>\r\n  <component name=\"SharedIndexes\">\r\n    <attachedChunks>\r\n      <set>\r\n        <option value=\"bundled-js-predefined-1d06a55b98c1-74d2a5396914-JavaScript-PY-241.14494.241\" />\r\n        <option value=\"bundled-python-sdk-0509580d9d50-28c9f5db9ffe-com.jetbrains.pycharm.pro.sharedIndexes.bundled-PY-241.14494.241\" />\r\n      </set>\r\n    </attachedChunks>\r\n  </component>\r\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"应用程序级\" UseSingleDictionary=\"true\" transferred=\"true\" />\r\n  <component name=\"TaskManager\">\r\n    <task active=\"true\" id=\"Default\" summary=\"默认任务\">\r\n      <changelist id=\"0b5e2ee8-7e60-4366-9adb-a2f4c0f8f485\" name=\"更改\" comment=\"\" />\r\n      <created>1741080957336</created>\r\n      <option name=\"number\" value=\"Default\" />\r\n      <option name=\"presentableId\" value=\"Default\" />\r\n      <updated>1741080957336</updated>\r\n      <workItem from=\"1741080958355\" duration=\"1038000\" />\r\n      <workItem from=\"1741082008595\" duration=\"269000\" />\r\n      <workItem from=\"1741082292403\" duration=\"174000\" />\r\n    </task>\r\n    <task id=\"LOCAL-00001\" summary=\"更改\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1741081531028</created>\r\n      <option name=\"number\" value=\"00001\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00001\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1741081531028</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00002\" summary=\"更改\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1741082350238</created>\r\n      <option name=\"number\" value=\"00002\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00002\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1741082350238</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00003\" summary=\"dplearning\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1741082446515</created>\r\n      <option name=\"number\" value=\"00003\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00003\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1741082446515</updated>\r\n    </task>\r\n    <option name=\"localTasksCounter\" value=\"4\" />\r\n    <servers />\r\n  </component>\r\n  <component name=\"TypeScriptGeneratedFilesManager\">\r\n    <option name=\"version\" value=\"3\" />\r\n  </component>\r\n  <component name=\"Vcs.Log.Tabs.Properties\">\r\n    <option name=\"TAB_STATES\">\r\n      <map>\r\n        <entry key=\"MAIN\">\r\n          <value>\r\n            <State>\r\n              <option name=\"FILTERS\">\r\n                <map>\r\n                  <entry key=\"branch\">\r\n                    <value>\r\n                      <list>\r\n                        <option value=\"origin/master\" />\r\n                      </list>\r\n                    </value>\r\n                  </entry>\r\n                </map>\r\n              </option>\r\n            </State>\r\n          </value>\r\n        </entry>\r\n      </map>\r\n    </option>\r\n  </component>\r\n  <component name=\"VcsManagerConfiguration\">\r\n    <MESSAGE value=\"更改\" />\r\n    <MESSAGE value=\"dplearning\" />\r\n    <option name=\"LAST_COMMIT_MESSAGE\" value=\"dplearning\" />\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	
+++ b/.idea/workspace.xml	
@@ -4,7 +4,11 @@
     <option name="autoReloadType" value="SELECTIVE" />
   </component>
   <component name="ChangeListManager">
-    <list default="true" id="0b5e2ee8-7e60-4366-9adb-a2f4c0f8f485" name="更改" comment="dplearning" />
+    <list default="true" id="0b5e2ee8-7e60-4366-9adb-a2f4c0f8f485" name="更改" comment="update">
+      <change beforePath="$PROJECT_DIR$/.idea/misc.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/misc.xml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/dplearning/dpbook_learning.ipynb" beforeDir="false" afterPath="$PROJECT_DIR$/dplearning/dpbook_learning.ipynb" afterDir="false" />
+    </list>
     <option name="SHOW_DIALOG" value="false" />
     <option name="HIGHLIGHT_CONFLICTS" value="true" />
     <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
@@ -56,6 +60,11 @@
     &quot;ChangesTree.GroupingKeys&quot;: []
   }
 }</component>
+  <component name="RecentsManager">
+    <key name="MoveFile.RECENT_KEYS">
+      <recent name="D:\code_file\dplearning" />
+    </key>
+  </component>
   <component name="SharedIndexes">
     <attachedChunks>
       <set>
@@ -75,6 +84,7 @@
       <workItem from="1741080958355" duration="1038000" />
       <workItem from="1741082008595" duration="269000" />
       <workItem from="1741082292403" duration="174000" />
+      <workItem from="1741148269208" duration="2517000" />
     </task>
     <task id="LOCAL-00001" summary="更改">
       <option name="closed" value="true" />
@@ -100,7 +110,39 @@
       <option name="project" value="LOCAL" />
       <updated>1741082446515</updated>
     </task>
-    <option name="localTasksCounter" value="4" />
+    <task id="LOCAL-00004" summary="dplearning">
+      <option name="closed" value="true" />
+      <created>1741148287131</created>
+      <option name="number" value="00004" />
+      <option name="presentableId" value="LOCAL-00004" />
+      <option name="project" value="LOCAL" />
+      <updated>1741148287131</updated>
+    </task>
+    <task id="LOCAL-00005" summary="书本资料">
+      <option name="closed" value="true" />
+      <created>1741148483382</created>
+      <option name="number" value="00005" />
+      <option name="presentableId" value="LOCAL-00005" />
+      <option name="project" value="LOCAL" />
+      <updated>1741148483382</updated>
+    </task>
+    <task id="LOCAL-00006" summary="书本资料">
+      <option name="closed" value="true" />
+      <created>1741148531072</created>
+      <option name="number" value="00006" />
+      <option name="presentableId" value="LOCAL-00006" />
+      <option name="project" value="LOCAL" />
+      <updated>1741148531072</updated>
+    </task>
+    <task id="LOCAL-00007" summary="update">
+      <option name="closed" value="true" />
+      <created>1741148565793</created>
+      <option name="number" value="00007" />
+      <option name="presentableId" value="LOCAL-00007" />
+      <option name="project" value="LOCAL" />
+      <updated>1741148565793</updated>
+    </task>
+    <option name="localTasksCounter" value="8" />
     <servers />
   </component>
   <component name="TypeScriptGeneratedFilesManager">
@@ -132,6 +174,8 @@
   <component name="VcsManagerConfiguration">
     <MESSAGE value="更改" />
     <MESSAGE value="dplearning" />
-    <option name="LAST_COMMIT_MESSAGE" value="dplearning" />
+    <MESSAGE value="书本资料" />
+    <MESSAGE value="update" />
+    <option name="LAST_COMMIT_MESSAGE" value="update" />
   </component>
 </project>
\ No newline at end of file
Index: dplearning/dpbook_learning.ipynb
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>{\r\n \"cells\": [\r\n  {\r\n   \"cell_type\": \"code\",\r\n   \"execution_count\": 6,\r\n   \"id\": \"289401c0\",\r\n   \"metadata\": {},\r\n   \"outputs\": [],\r\n   \"source\": [\r\n    \"import sys\\n\",\r\n    \"proj_path = \\\"/opt/algo_team/OnlineProject/search_python/\\\"\\n\",\r\n    \"sys.path.append(proj_path)\\n\",\r\n    \"from tools_util.calculate_tools import today_1\\n\",\r\n    \"from tools_util.spark_query_data import *\\n\",\r\n    \"from P_parameter.hive_table_name import  *\"\r\n   ]\r\n  },\r\n  {\r\n   \"cell_type\": \"code\",\r\n   \"execution_count\": 10,\r\n   \"id\": \"95f8b465\",\r\n   \"metadata\": {},\r\n   \"outputs\": [\r\n    {\r\n     \"name\": \"stdout\",\r\n     \"output_type\": \"stream\",\r\n     \"text\": [\r\n      \"\\n\",\r\n      \"select count(1) from \\n\",\r\n      \"algorithm_data.searchpy_candidate_word_union_active\\n\",\r\n      \"where dt='20250303'\\n\",\r\n      \"and add_date='20250303'\\n\",\r\n      \"\\n\"\r\n     ]\r\n    },\r\n    {\r\n     \"name\": \"stderr\",\r\n     \"output_type\": \"stream\",\r\n     \"text\": [\r\n      \"[Stage 4:=======================================>                   (2 + 1) / 3]\"\r\n     ]\r\n    },\r\n    {\r\n     \"name\": \"stdout\",\r\n     \"output_type\": \"stream\",\r\n     \"text\": [\r\n      \"+--------+\\n\",\r\n      \"|count(1)|\\n\",\r\n      \"+--------+\\n\",\r\n      \"|    4461|\\n\",\r\n      \"+--------+\\n\",\r\n      \"\\n\"\r\n     ]\r\n    },\r\n    {\r\n     \"name\": \"stderr\",\r\n     \"output_type\": \"stream\",\r\n     \"text\": [\r\n      \"\\r\",\r\n      \"                                                                                \\r\"\r\n     ]\r\n    }\r\n   ],\r\n   \"source\": [\r\n    \"query_data_from_spark('''\\n\",\r\n    \"select count(1) from \\n\",\r\n    \"algorithm_data.searchpy_candidate_word_union_active\\n\",\r\n    \"where dt='20250303'\\n\",\r\n    \"and add_date='20250303'\\n\",\r\n    \"''').show()\"\r\n   ]\r\n  },\r\n  {\r\n   \"cell_type\": \"code\",\r\n   \"execution_count\": 44,\r\n   \"id\": \"a919378d\",\r\n   \"metadata\": {},\r\n   \"outputs\": [],\r\n   \"source\": [\r\n    \"import numpy as np\\n\",\r\n    \"import pandas as pd\\n\",\r\n    \"import matplotlib.pyplot as plt\"\r\n   ]\r\n  },\r\n  {\r\n   \"cell_type\": \"code\",\r\n   \"execution_count\": 45,\r\n   \"id\": \"a4e69f39\",\r\n   \"metadata\": {},\r\n   \"outputs\": [],\r\n   \"source\": [\r\n    \"x=np.arange(0,6,0.1)\"\r\n   ]\r\n  },\r\n  {\r\n   \"cell_type\": \"code\",\r\n   \"execution_count\": 48,\r\n   \"id\": \"ffa02f70\",\r\n   \"metadata\": {},\r\n   \"outputs\": [],\r\n   \"source\": [\r\n    \"y1=np.sin(x)\\n\",\r\n    \"y2=np.cos(x)\"\r\n   ]\r\n  },\r\n  {\r\n   \"cell_type\": \"code\",\r\n   \"execution_count\": 57,\r\n   \"id\": \"4f01e429\",\r\n   \"metadata\": {},\r\n   \"outputs\": [\r\n    {\r\n     \"data\": {\r\n      \"text/plain\": [\r\n       \"Text(0, 0.5, 'y')\"\r\n      ]\r\n     },\r\n     \"execution_count\": 57,\r\n     \"metadata\": {},\r\n     \"output_type\": \"execute_result\"\r\n    },\r\n    {\r\n     \"data\": {\r\n      \"image/png\": \"\\n\",\r\n      \"text/plain\": [\r\n       \"<Figure size 432x288 with 1 Axes>\"\r\n      ]\r\n     },\r\n     \"metadata\": {\r\n      \"needs_background\": \"light\"\r\n     },\r\n     \"output_type\": \"display_data\"\r\n    }\r\n   ],\r\n   \"source\": [\r\n    \"plt.plot(x,y1,label='sin')\\n\",\r\n    \"plt.plot(x,y2,linestyle='--',label='cos')\\n\",\r\n    \"plt.legend()\\n\",\r\n    \"plt.xlabel('x')\\n\",\r\n    \"plt.ylabel('y')\"\r\n   ]\r\n  },\r\n  {\r\n   \"cell_type\": \"code\",\r\n   \"execution_count\": 58,\r\n   \"id\": \"41b97a0a\",\r\n   \"metadata\": {},\r\n   \"outputs\": [],\r\n   \"source\": [\r\n    \"x=np.array([1,2])\"\r\n   ]\r\n  },\r\n  {\r\n   \"cell_type\": \"code\",\r\n   \"execution_count\": 59,\r\n   \"id\": \"1df7cf19\",\r\n   \"metadata\": {},\r\n   \"outputs\": [],\r\n   \"source\": [\r\n    \"y=x>0\"\r\n   ]\r\n  },\r\n  {\r\n   \"cell_type\": \"code\",\r\n   \"execution_count\": 62,\r\n   \"id\": \"5d166d21\",\r\n   \"metadata\": {},\r\n   \"outputs\": [\r\n    {\r\n     \"data\": {\r\n      \"text/plain\": [\r\n       \"array([1, 1])\"\r\n      ]\r\n     },\r\n     \"execution_count\": 62,\r\n     \"metadata\": {},\r\n     \"output_type\": \"execute_result\"\r\n    }\r\n   ],\r\n   \"source\": [\r\n    \"y.astype(int)\"\r\n   ]\r\n  },\r\n  {\r\n   \"cell_type\": \"code\",\r\n   \"execution_count\": 63,\r\n   \"id\": \"ea15a58b\",\r\n   \"metadata\": {},\r\n   \"outputs\": [],\r\n   \"source\": [\r\n    \"a='s'\"\r\n   ]\r\n  },\r\n  {\r\n   \"cell_type\": \"code\",\r\n   \"execution_count\": 64,\r\n   \"id\": \"834bd55e\",\r\n   \"metadata\": {},\r\n   \"outputs\": [\r\n    {\r\n     \"ename\": \"AttributeError\",\r\n     \"evalue\": \"'str' object has no attribute 'astype'\",\r\n     \"output_type\": \"error\",\r\n     \"traceback\": [\r\n      \"\\u001B[0;31m---------------------------------------------------------------------------\\u001B[0m\",\r\n      \"\\u001B[0;31mAttributeError\\u001B[0m                            Traceback (most recent call last)\",\r\n      \"\\u001B[0;32m/tmp/ipykernel_1167120/19811571.py\\u001B[0m in \\u001B[0;36m<module>\\u001B[0;34m\\u001B[0m\\n\\u001B[0;32m----> 1\\u001B[0;31m \\u001B[0ma\\u001B[0m\\u001B[0;34m.\\u001B[0m\\u001B[0mastype\\u001B[0m\\u001B[0;34m(\\u001B[0m\\u001B[0mstr\\u001B[0m\\u001B[0;34m)\\u001B[0m\\u001B[0;34m\\u001B[0m\\u001B[0;34m\\u001B[0m\\u001B[0m\\n\\u001B[0m\",\r\n      \"\\u001B[0;31mAttributeError\\u001B[0m: 'str' object has no attribute 'astype'\"\r\n     ]\r\n    }\r\n   ],\r\n   \"source\": [\r\n    \"a.astype(str)\"\r\n   ]\r\n  },\r\n  {\r\n   \"cell_type\": \"markdown\",\r\n   \"id\": \"ae761761\",\r\n   \"metadata\": {},\r\n   \"source\": [\r\n    \"### 阶跃函数\"\r\n   ]\r\n  },\r\n  {\r\n   \"cell_type\": \"code\",\r\n   \"execution_count\": 78,\r\n   \"id\": \"6f079d62\",\r\n   \"metadata\": {},\r\n   \"outputs\": [],\r\n   \"source\": [\r\n    \"def step_functio(x):\\n\",\r\n    \"    return (x>0).astype(int)\\n\",\r\n    \"x=np.arange(-10,10,0.01)\\n\",\r\n    \"y1=step_functio(x)\\n\",\r\n    \"def sigmoid(x):\\n\",\r\n    \"    return 1/(1+np.exp(-x))\\n\",\r\n    \"y2=sigmoid(x)\\n\",\r\n    \"\\n\",\r\n    \"plt.plot(x,y1)\\n\",\r\n    \"plt.plot(x,y2)\"\r\n   ]\r\n  },\r\n  {\r\n   \"cell_type\": \"code\",\r\n   \"execution_count\": 84,\r\n   \"id\": \"b792ad68\",\r\n   \"metadata\": {},\r\n   \"outputs\": [\r\n    {\r\n     \"data\": {\r\n      \"text/plain\": [\r\n       \"<function numpy.amax(a, axis=None, out=None, keepdims=<no value>, initial=<no value>, where=<no value>)>\"\r\n      ]\r\n     },\r\n     \"execution_count\": 84,\r\n     \"metadata\": {},\r\n     \"output_type\": \"execute_result\"\r\n    }\r\n   ],\r\n   \"source\": [\r\n    \"np.max\\n\",\r\n    \"np.maximum\"\r\n   ]\r\n  },\r\n  {\r\n   \"cell_type\": \"code\",\r\n   \"execution_count\": 85,\r\n   \"id\": \"a21363a7\",\r\n   \"metadata\": {},\r\n   \"outputs\": [\r\n    {\r\n     \"data\": {\r\n      \"text/plain\": [\r\n       \"[<matplotlib.lines.Line2D at 0x7f412f20f790>]\"\r\n      ]\r\n     },\r\n     \"execution_count\": 85,\r\n     \"metadata\": {},\r\n     \"output_type\": \"execute_result\"\r\n    },\r\n    {\r\n     \"data\": {\r\n      \"image/png\": \"\\n\",\r\n      \"text/plain\": [\r\n       \"<Figure size 432x288 with 1 Axes>\"\r\n      ]\r\n     },\r\n     \"metadata\": {\r\n      \"needs_background\": \"light\"\r\n     },\r\n     \"output_type\": \"display_data\"\r\n    }\r\n   ],\r\n   \"source\": [\r\n    \"def relu(x):\\n\",\r\n    \"    return np.maximum(0,x)\\n\",\r\n    \"x=np.arange(-10,10,0.01)\\n\",\r\n    \"y1=relu(x)\\n\",\r\n    \"plt.plot(x,y1)\"\r\n   ]\r\n  },\r\n  {\r\n   \"cell_type\": \"markdown\",\r\n   \"id\": \"2a2b8874\",\r\n   \"metadata\": {},\r\n   \"source\": [\r\n    \"### 矩阵乘法\"\r\n   ]\r\n  },\r\n  {\r\n   \"cell_type\": \"code\",\r\n   \"execution_count\": 86,\r\n   \"id\": \"296a442b\",\r\n   \"metadata\": {},\r\n   \"outputs\": [],\r\n   \"source\": [\r\n    \"x=np.array([[1,2,3],[2,3,4]])\\n\",\r\n    \"y=np.array([1,1,1,1,1,1]).reshape(3,2)\"\r\n   ]\r\n  },\r\n  {\r\n   \"cell_type\": \"code\",\r\n   \"execution_count\": 88,\r\n   \"id\": \"69cc452f\",\r\n   \"metadata\": {},\r\n   \"outputs\": [\r\n    {\r\n     \"data\": {\r\n      \"text/plain\": [\r\n       \"array([[6, 6],\\n\",\r\n       \"       [9, 9]])\"\r\n      ]\r\n     },\r\n     \"execution_count\": 88,\r\n     \"metadata\": {},\r\n     \"output_type\": \"execute_result\"\r\n    }\r\n   ],\r\n   \"source\": [\r\n    \"np.dot(x,y)\"\r\n   ]\r\n  },\r\n  {\r\n   \"cell_type\": \"markdown\",\r\n   \"id\": \"12020961\",\r\n   \"metadata\": {},\r\n   \"source\": [\r\n    \"### 神经网络实现\"\r\n   ]\r\n  },\r\n  {\r\n   \"cell_type\": \"code\",\r\n   \"execution_count\": 106,\r\n   \"id\": \"b5098ccd\",\r\n   \"metadata\": {},\r\n   \"outputs\": [],\r\n   \"source\": [\r\n    \"def init_network():\\n\",\r\n    \"    network={}\\n\",\r\n    \"    network['W1']=np.array([[0.1,0.3,0.5],[0.2,0.4,0.6]])\\n\",\r\n    \"    network['b1']=np.array([0.1,0.2,0.3])\\n\",\r\n    \"    network['W2']=np.array([[0.1,0.4],[0.2,0.5],[0.3,0.6]])\\n\",\r\n    \"    network['b2']=np.array([0.1,0.2])\\n\",\r\n    \"    network['W3']=np.array([[0.1,0.3],[0.2,0.4]])\\n\",\r\n    \"    network['b3']=np.array([0.1,0.2])\\n\",\r\n    \"    return network\\n\",\r\n    \"\\n\",\r\n    \"\\n\",\r\n    \"def softmax(x):\\n\",\r\n    \"    ##softmax溢出对策\\n\",\r\n    \"    c=np.max(x)\\n\",\r\n    \"    return np.exp(x-c)/(np.exp(x-c)).sum()\\n\",\r\n    \"\\n\",\r\n    \"def sigmoid(x):\\n\",\r\n    \"    return 1/(1+np.exp(-x))\\n\",\r\n    \"\\n\",\r\n    \"def identity_function(x):\\n\",\r\n    \"    return softmax(x)\\n\",\r\n    \"\\n\"\r\n   ]\r\n  },\r\n  {\r\n   \"cell_type\": \"code\",\r\n   \"execution_count\": 107,\r\n   \"id\": \"6c562d71\",\r\n   \"metadata\": {},\r\n   \"outputs\": [],\r\n   \"source\": [\r\n    \"def forward(network,x):\\n\",\r\n    \"    W1,W2,W3=network['W1'],network['W2'],network['W3']\\n\",\r\n    \"    b1,b2,b3=network['b1'],network['b2'],network['b3']\\n\",\r\n    \"    #第一层\\n\",\r\n    \"    a1=np.dot(x,W1)+b1\\n\",\r\n    \"    z1=sigmoid(a1)\\n\",\r\n    \"    #第二层\\n\",\r\n    \"    a2=np.dot(z1,W2)+b2\\n\",\r\n    \"    z2=sigmoid(a2)\\n\",\r\n    \"    #第三层\\n\",\r\n    \"    a3=np.dot(z2,W3)+b3\\n\",\r\n    \"\\n\",\r\n    \"    \\n\",\r\n    \"    y=identity_function(a3)\\n\",\r\n    \"    return y\"\r\n   ]\r\n  },\r\n  {\r\n   \"cell_type\": \"code\",\r\n   \"execution_count\": 108,\r\n   \"id\": \"c9d58fa8\",\r\n   \"metadata\": {},\r\n   \"outputs\": [\r\n    {\r\n     \"data\": {\r\n      \"text/plain\": [\r\n       \"array([0.40625907, 0.59374093])\"\r\n      ]\r\n     },\r\n     \"execution_count\": 108,\r\n     \"metadata\": {},\r\n     \"output_type\": \"execute_result\"\r\n    }\r\n   ],\r\n   \"source\": [\r\n    \"x=np.array([1.0,0.5])\\n\",\r\n    \"forward(init_network(),x)\"\r\n   ]\r\n  },\r\n  {\r\n   \"cell_type\": \"code\",\r\n   \"execution_count\": 110,\r\n   \"id\": \"7ca872c3\",\r\n   \"metadata\": {},\r\n   \"outputs\": [],\r\n   \"source\": [\r\n    \"def softmax(x):\\n\",\r\n    \"    c=np.max(x)\\n\",\r\n    \"    return np.exp(x-c)/(np.exp(x-c)).sum()\"\r\n   ]\r\n  },\r\n  {\r\n   \"cell_type\": \"code\",\r\n   \"execution_count\": null,\r\n   \"id\": \"6db1ac84\",\r\n   \"metadata\": {},\r\n   \"outputs\": [],\r\n   \"source\": []\r\n  }\r\n ],\r\n \"metadata\": {\r\n  \"kernelspec\": {\r\n   \"display_name\": \"Python 3 (ipykernel)\",\r\n   \"language\": \"python\",\r\n   \"name\": \"python3\"\r\n  },\r\n  \"language_info\": {\r\n   \"codemirror_mode\": {\r\n    \"name\": \"ipython\",\r\n    \"version\": 3\r\n   },\r\n   \"file_extension\": \".py\",\r\n   \"mimetype\": \"text/x-python\",\r\n   \"name\": \"python\",\r\n   \"nbconvert_exporter\": \"python\",\r\n   \"pygments_lexer\": \"ipython3\",\r\n   \"version\": \"3.7.13\"\r\n  }\r\n },\r\n \"nbformat\": 4,\r\n \"nbformat_minor\": 5\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/dplearning/dpbook_learning.ipynb b/dplearning/dpbook_learning.ipynb
--- a/dplearning/dpbook_learning.ipynb	
+++ b/dplearning/dpbook_learning.ipynb	
@@ -2,112 +2,68 @@
  "cells": [
   {
    "cell_type": "code",
-   "execution_count": 6,
-   "id": "289401c0",
-   "metadata": {},
-   "outputs": [],
-   "source": [
-    "import sys\n",
-    "proj_path = \"/opt/algo_team/OnlineProject/search_python/\"\n",
-    "sys.path.append(proj_path)\n",
-    "from tools_util.calculate_tools import today_1\n",
-    "from tools_util.spark_query_data import *\n",
-    "from P_parameter.hive_table_name import  *"
-   ]
-  },
-  {
-   "cell_type": "code",
-   "execution_count": 10,
-   "id": "95f8b465",
-   "metadata": {},
-   "outputs": [
-    {
-     "name": "stdout",
-     "output_type": "stream",
-     "text": [
-      "\n",
-      "select count(1) from \n",
-      "algorithm_data.searchpy_candidate_word_union_active\n",
-      "where dt='20250303'\n",
-      "and add_date='20250303'\n",
-      "\n"
-     ]
-    },
-    {
-     "name": "stderr",
-     "output_type": "stream",
-     "text": [
-      "[Stage 4:=======================================>                   (2 + 1) / 3]"
-     ]
-    },
-    {
-     "name": "stdout",
-     "output_type": "stream",
-     "text": [
-      "+--------+\n",
-      "|count(1)|\n",
-      "+--------+\n",
-      "|    4461|\n",
-      "+--------+\n",
-      "\n"
-     ]
-    },
-    {
-     "name": "stderr",
-     "output_type": "stream",
-     "text": [
-      "\r",
-      "                                                                                \r"
-     ]
-    }
-   ],
-   "source": [
-    "query_data_from_spark('''\n",
-    "select count(1) from \n",
-    "algorithm_data.searchpy_candidate_word_union_active\n",
-    "where dt='20250303'\n",
-    "and add_date='20250303'\n",
-    "''').show()"
-   ]
-  },
-  {
-   "cell_type": "code",
-   "execution_count": 44,
    "id": "a919378d",
-   "metadata": {},
-   "outputs": [],
+   "metadata": {
+    "ExecuteTime": {
+     "end_time": "2025-03-05T04:23:19.853660Z",
+     "start_time": "2025-03-05T04:23:18.466608Z"
+    }
+   },
    "source": [
     "import numpy as np\n",
     "import pandas as pd\n",
     "import matplotlib.pyplot as plt"
-   ]
+   ],
+   "outputs": [],
+   "execution_count": 1
   },
   {
    "cell_type": "code",
-   "execution_count": 45,
    "id": "a4e69f39",
-   "metadata": {},
-   "outputs": [],
+   "metadata": {
+    "ExecuteTime": {
+     "end_time": "2025-03-05T04:23:21.158526Z",
+     "start_time": "2025-03-05T04:23:21.154434Z"
+    }
+   },
    "source": [
     "x=np.arange(0,6,0.1)"
-   ]
+   ],
+   "outputs": [],
+   "execution_count": 2
   },
   {
    "cell_type": "code",
-   "execution_count": 48,
    "id": "ffa02f70",
-   "metadata": {},
-   "outputs": [],
+   "metadata": {
+    "ExecuteTime": {
+     "end_time": "2025-03-05T04:23:21.486087Z",
+     "start_time": "2025-03-05T04:23:21.482770Z"
+    }
+   },
    "source": [
     "y1=np.sin(x)\n",
     "y2=np.cos(x)"
-   ]
+   ],
+   "outputs": [],
+   "execution_count": 3
   },
   {
    "cell_type": "code",
-   "execution_count": 57,
    "id": "4f01e429",
-   "metadata": {},
+   "metadata": {
+    "ExecuteTime": {
+     "end_time": "2025-03-05T04:23:21.955747Z",
+     "start_time": "2025-03-05T04:23:21.729599Z"
+    }
+   },
+   "source": [
+    "plt.plot(x,y1,label='sin')\n",
+    "plt.plot(x,y2,linestyle='--',label='cos')\n",
+    "plt.legend()\n",
+    "plt.xlabel('x')\n",
+    "plt.ylabel('y')"
+   ],
    "outputs": [
     {
      "data": {
@@ -115,56 +71,65 @@
        "Text(0, 0.5, 'y')"
       ]
      },
-     "execution_count": 57,
+     "execution_count": 4,
      "metadata": {},
      "output_type": "execute_result"
     },
     {
      "data": {
-      "image/png": "\n",
       "text/plain": [
-       "<Figure size 432x288 with 1 Axes>"
-      ]
+       "<Figure size 640x480 with 1 Axes>"
+      ],
+      "image/png": "\n"
      },
-     "metadata": {
-      "needs_background": "light"
-     },
+     "metadata": {},
      "output_type": "display_data"
     }
    ],
-   "source": [
-    "plt.plot(x,y1,label='sin')\n",
-    "plt.plot(x,y2,linestyle='--',label='cos')\n",
-    "plt.legend()\n",
-    "plt.xlabel('x')\n",
-    "plt.ylabel('y')"
-   ]
+   "execution_count": 4
   },
   {
    "cell_type": "code",
-   "execution_count": 58,
    "id": "41b97a0a",
-   "metadata": {},
-   "outputs": [],
+   "metadata": {
+    "ExecuteTime": {
+     "end_time": "2025-03-05T04:23:22.742519Z",
+     "start_time": "2025-03-05T04:23:22.738631Z"
+    }
+   },
    "source": [
     "x=np.array([1,2])"
-   ]
+   ],
+   "outputs": [],
+   "execution_count": 5
   },
   {
    "cell_type": "code",
-   "execution_count": 59,
    "id": "1df7cf19",
-   "metadata": {},
-   "outputs": [],
+   "metadata": {
+    "ExecuteTime": {
+     "end_time": "2025-03-05T04:23:22.886022Z",
+     "start_time": "2025-03-05T04:23:22.881718Z"
+    }
+   },
    "source": [
     "y=x>0"
-   ]
+   ],
+   "outputs": [],
+   "execution_count": 6
   },
   {
    "cell_type": "code",
-   "execution_count": 62,
    "id": "5d166d21",
-   "metadata": {},
+   "metadata": {
+    "ExecuteTime": {
+     "end_time": "2025-03-05T04:23:23.058926Z",
+     "start_time": "2025-03-05T04:23:23.054210Z"
+    }
+   },
+   "source": [
+    "y.astype(int)"
+   ],
    "outputs": [
     {
      "data": {
@@ -172,46 +137,12 @@
        "array([1, 1])"
       ]
      },
-     "execution_count": 62,
+     "execution_count": 7,
      "metadata": {},
      "output_type": "execute_result"
     }
    ],
-   "source": [
-    "y.astype(int)"
-   ]
-  },
-  {
-   "cell_type": "code",
-   "execution_count": 63,
-   "id": "ea15a58b",
-   "metadata": {},
-   "outputs": [],
-   "source": [
-    "a='s'"
-   ]
-  },
-  {
-   "cell_type": "code",
-   "execution_count": 64,
-   "id": "834bd55e",
-   "metadata": {},
-   "outputs": [
-    {
-     "ename": "AttributeError",
-     "evalue": "'str' object has no attribute 'astype'",
-     "output_type": "error",
-     "traceback": [
-      "\u001B[0;31m---------------------------------------------------------------------------\u001B[0m",
-      "\u001B[0;31mAttributeError\u001B[0m                            Traceback (most recent call last)",
-      "\u001B[0;32m/tmp/ipykernel_1167120/19811571.py\u001B[0m in \u001B[0;36m<module>\u001B[0;34m\u001B[0m\n\u001B[0;32m----> 1\u001B[0;31m \u001B[0ma\u001B[0m\u001B[0;34m.\u001B[0m\u001B[0mastype\u001B[0m\u001B[0;34m(\u001B[0m\u001B[0mstr\u001B[0m\u001B[0;34m)\u001B[0m\u001B[0;34m\u001B[0m\u001B[0;34m\u001B[0m\u001B[0m\n\u001B[0m",
-      "\u001B[0;31mAttributeError\u001B[0m: 'str' object has no attribute 'astype'"
-     ]
-    }
-   ],
-   "source": [
-    "a.astype(str)"
-   ]
+   "execution_count": 7
   },
   {
    "cell_type": "markdown",
@@ -223,10 +154,13 @@
   },
   {
    "cell_type": "code",
-   "execution_count": 78,
    "id": "6f079d62",
-   "metadata": {},
-   "outputs": [],
+   "metadata": {
+    "ExecuteTime": {
+     "end_time": "2025-03-05T04:23:31.523503Z",
+     "start_time": "2025-03-05T04:23:31.405353Z"
+    }
+   },
    "source": [
     "def step_functio(x):\n",
     "    return (x>0).astype(int)\n",
@@ -238,66 +172,97 @@
     "\n",
     "plt.plot(x,y1)\n",
     "plt.plot(x,y2)"
-   ]
-  },
-  {
-   "cell_type": "code",
-   "execution_count": 84,
-   "id": "b792ad68",
-   "metadata": {},
+   ],
    "outputs": [
     {
      "data": {
       "text/plain": [
-       "<function numpy.amax(a, axis=None, out=None, keepdims=<no value>, initial=<no value>, where=<no value>)>"
+       "[<matplotlib.lines.Line2D at 0x1764d2f1790>]"
       ]
      },
-     "execution_count": 84,
+     "execution_count": 10,
      "metadata": {},
      "output_type": "execute_result"
+    },
+    {
+     "data": {
+      "text/plain": [
+       "<Figure size 640x480 with 1 Axes>"
+      ],
+      "image/png": "\n"
+     },
+     "metadata": {},
+     "output_type": "display_data"
     }
    ],
+   "execution_count": 10
+  },
+  {
+   "cell_type": "code",
+   "id": "b792ad68",
+   "metadata": {
+    "ExecuteTime": {
+     "end_time": "2025-03-05T04:23:31.533237Z",
+     "start_time": "2025-03-05T04:23:31.527509Z"
+    }
+   },
    "source": [
     "np.max\n",
     "np.maximum"
-   ]
-  },
-  {
-   "cell_type": "code",
-   "execution_count": 85,
-   "id": "a21363a7",
-   "metadata": {},
+   ],
    "outputs": [
     {
      "data": {
       "text/plain": [
-       "[<matplotlib.lines.Line2D at 0x7f412f20f790>]"
+       "<ufunc 'maximum'>"
       ]
      },
-     "execution_count": 85,
+     "execution_count": 11,
      "metadata": {},
      "output_type": "execute_result"
-    },
-    {
-     "data": {
-      "image/png": "\n",
-      "text/plain": [
-       "<Figure size 432x288 with 1 Axes>"
-      ]
-     },
-     "metadata": {
-      "needs_background": "light"
-     },
-     "output_type": "display_data"
+    }
+   ],
+   "execution_count": 11
+  },
+  {
+   "cell_type": "code",
+   "id": "a21363a7",
+   "metadata": {
+    "ExecuteTime": {
+     "end_time": "2025-03-05T04:23:31.829164Z",
+     "start_time": "2025-03-05T04:23:31.697634Z"
     }
-   ],
+   },
    "source": [
     "def relu(x):\n",
     "    return np.maximum(0,x)\n",
     "x=np.arange(-10,10,0.01)\n",
     "y1=relu(x)\n",
     "plt.plot(x,y1)"
-   ]
+   ],
+   "outputs": [
+    {
+     "data": {
+      "text/plain": [
+       "[<matplotlib.lines.Line2D at 0x1764d367e10>]"
+      ]
+     },
+     "execution_count": 12,
+     "metadata": {},
+     "output_type": "execute_result"
+    },
+    {
+     "data": {
+      "text/plain": [
+       "<Figure size 640x480 with 1 Axes>"
+      ],
+      "image/png": "\n"
+     },
+     "metadata": {},
+     "output_type": "display_data"
+    }
+   ],
+   "execution_count": 12
   },
   {
    "cell_type": "markdown",
@@ -309,20 +274,32 @@
   },
   {
    "cell_type": "code",
-   "execution_count": 86,
    "id": "296a442b",
-   "metadata": {},
-   "outputs": [],
+   "metadata": {
+    "ExecuteTime": {
+     "end_time": "2025-03-05T04:23:32.008240Z",
+     "start_time": "2025-03-05T04:23:32.003240Z"
+    }
+   },
    "source": [
     "x=np.array([[1,2,3],[2,3,4]])\n",
     "y=np.array([1,1,1,1,1,1]).reshape(3,2)"
-   ]
+   ],
+   "outputs": [],
+   "execution_count": 13
   },
   {
    "cell_type": "code",
-   "execution_count": 88,
    "id": "69cc452f",
-   "metadata": {},
+   "metadata": {
+    "ExecuteTime": {
+     "end_time": "2025-03-05T04:23:32.150703Z",
+     "start_time": "2025-03-05T04:23:32.144645Z"
+    }
+   },
+   "source": [
+    "np.dot(x,y)"
+   ],
    "outputs": [
     {
      "data": {
@@ -331,14 +308,12 @@
        "       [9, 9]])"
       ]
      },
-     "execution_count": 88,
+     "execution_count": 14,
      "metadata": {},
      "output_type": "execute_result"
     }
    ],
-   "source": [
-    "np.dot(x,y)"
-   ]
+   "execution_count": 14
   },
   {
    "cell_type": "markdown",
@@ -350,10 +325,13 @@
   },
   {
    "cell_type": "code",
-   "execution_count": 106,
    "id": "b5098ccd",
-   "metadata": {},
-   "outputs": [],
+   "metadata": {
+    "ExecuteTime": {
+     "end_time": "2025-03-05T04:23:32.906759Z",
+     "start_time": "2025-03-05T04:23:32.901179Z"
+    }
+   },
    "source": [
     "def init_network():\n",
     "    network={}\n",
@@ -377,14 +355,19 @@
     "def identity_function(x):\n",
     "    return softmax(x)\n",
     "\n"
-   ]
+   ],
+   "outputs": [],
+   "execution_count": 15
   },
   {
    "cell_type": "code",
-   "execution_count": 107,
    "id": "6c562d71",
-   "metadata": {},
-   "outputs": [],
+   "metadata": {
+    "ExecuteTime": {
+     "end_time": "2025-03-05T04:23:33.185285Z",
+     "start_time": "2025-03-05T04:23:33.181214Z"
+    }
+   },
    "source": [
     "def forward(network,x):\n",
     "    W1,W2,W3=network['W1'],network['W2'],network['W3']\n",
@@ -401,13 +384,23 @@
     "    \n",
     "    y=identity_function(a3)\n",
     "    return y"
-   ]
+   ],
+   "outputs": [],
+   "execution_count": 16
   },
   {
    "cell_type": "code",
-   "execution_count": 108,
    "id": "c9d58fa8",
-   "metadata": {},
+   "metadata": {
+    "ExecuteTime": {
+     "end_time": "2025-03-05T04:23:33.533152Z",
+     "start_time": "2025-03-05T04:23:33.524325Z"
+    }
+   },
+   "source": [
+    "x=np.array([1.0,0.5])\n",
+    "forward(init_network(),x)"
+   ],
    "outputs": [
     {
      "data": {
@@ -415,35 +408,171 @@
        "array([0.40625907, 0.59374093])"
       ]
      },
-     "execution_count": 108,
+     "execution_count": 17,
      "metadata": {},
      "output_type": "execute_result"
     }
    ],
-   "source": [
-    "x=np.array([1.0,0.5])\n",
-    "forward(init_network(),x)"
-   ]
+   "execution_count": 17
   },
   {
    "cell_type": "code",
-   "execution_count": 110,
    "id": "7ca872c3",
-   "metadata": {},
-   "outputs": [],
+   "metadata": {
+    "ExecuteTime": {
+     "end_time": "2025-03-05T04:23:34.039483Z",
+     "start_time": "2025-03-05T04:23:34.036544Z"
+    }
+   },
    "source": [
     "def softmax(x):\n",
     "    c=np.max(x)\n",
     "    return np.exp(x-c)/(np.exp(x-c)).sum()"
-   ]
+   ],
+   "outputs": [],
+   "execution_count": 18
+  },
+  {
+   "metadata": {},
+   "cell_type": "markdown",
+   "source": "### 手写数字识别",
+   "id": "2b41f4964c10f2c7"
   },
   {
    "cell_type": "code",
-   "execution_count": null,
    "id": "6db1ac84",
+   "metadata": {
+    "ExecuteTime": {
+     "end_time": "2025-03-05T04:28:08.063565Z",
+     "start_time": "2025-03-05T04:28:08.055229Z"
+    }
+   },
+   "source": [
+    "import sys\n",
+    "sys.path.append('D:\\\\code_file\\\\dplearning\\\\book_material')\n",
+    "from dataset.mnist import load_mnist"
+   ],
+   "outputs": [],
+   "execution_count": 28
+  },
+  {
+   "metadata": {
+    "ExecuteTime": {
+     "end_time": "2025-03-05T04:28:53.214061Z",
+     "start_time": "2025-03-05T04:28:24.240149Z"
+    }
+   },
+   "cell_type": "code",
+   "source": "(x_train, t_train), (x_test, t_test) = load_mnist(flatten=True,normalize=False)",
+   "id": "269428c80ebf3aac",
+   "outputs": [
+    {
+     "name": "stdout",
+     "output_type": "stream",
+     "text": [
+      "Downloading train-images-idx3-ubyte.gz ... \n",
+      "Done\n",
+      "Downloading train-labels-idx1-ubyte.gz ... \n",
+      "Done\n",
+      "Downloading t10k-images-idx3-ubyte.gz ... \n",
+      "Done\n",
+      "Downloading t10k-labels-idx1-ubyte.gz ... \n",
+      "Done\n",
+      "Converting train-images-idx3-ubyte.gz to NumPy Array ...\n",
+      "Done\n",
+      "Converting train-labels-idx1-ubyte.gz to NumPy Array ...\n",
+      "Done\n",
+      "Converting t10k-images-idx3-ubyte.gz to NumPy Array ...\n",
+      "Done\n",
+      "Converting t10k-labels-idx1-ubyte.gz to NumPy Array ...\n",
+      "Done\n",
+      "Creating pickle file ...\n",
+      "Done!\n"
+     ]
+    }
+   ],
+   "execution_count": 29
+  },
+  {
+   "metadata": {
+    "ExecuteTime": {
+     "end_time": "2025-03-05T04:33:42.649738Z",
+     "start_time": "2025-03-05T04:33:42.646595Z"
+    }
+   },
+   "cell_type": "code",
+   "source": [
+    "from PIL import Image\n",
+    "def img_show(img):\n",
+    " pil_img = Image.fromarray(np.uint8(img))\n",
+    " pil_img.show()"
+   ],
+   "id": "5ae11454d6b93ef8",
+   "outputs": [],
+   "execution_count": 38
+  },
+  {
+   "metadata": {
+    "ExecuteTime": {
+     "end_time": "2025-03-05T04:34:16.393798Z",
+     "start_time": "2025-03-05T04:33:49.700854Z"
+    }
+   },
+   "cell_type": "code",
+   "source": "img_show(x_test[0].reshape(28,28))",
+   "id": "81b99dabc74365aa",
+   "outputs": [],
+   "execution_count": 39
+  },
+  {
+   "metadata": {
+    "ExecuteTime": {
+     "end_time": "2025-03-05T04:34:46.152474Z",
+     "start_time": "2025-03-05T04:34:46.149690Z"
+    }
+   },
+   "cell_type": "code",
+   "source": [
+    "img=x_test[0].reshape(28,28)\n",
+    "label=t_test[0]"
+   ],
+   "id": "1ee57b6313efc330",
+   "outputs": [],
+   "execution_count": 40
+  },
+  {
+   "metadata": {
+    "ExecuteTime": {
+     "end_time": "2025-03-05T04:36:44.271905Z",
+     "start_time": "2025-03-05T04:36:44.267632Z"
+    }
+   },
+   "cell_type": "code",
+   "source": "img=np.random.randint(0,220,size=(28,28))",
+   "id": "8777e3c46ea28571",
+   "outputs": [],
+   "execution_count": 46
+  },
+  {
+   "metadata": {
+    "ExecuteTime": {
+     "end_time": "2025-03-05T04:36:55.821333Z",
+     "start_time": "2025-03-05T04:36:44.528726Z"
+    }
+   },
+   "cell_type": "code",
+   "source": "img_show(img)",
+   "id": "51b08227667988fd",
+   "outputs": [],
+   "execution_count": 47
+  },
+  {
    "metadata": {},
+   "cell_type": "code",
    "outputs": [],
-   "source": []
+   "execution_count": null,
+   "source": "",
+   "id": "ab9b9ce930bdaf8d"
   }
  ],
  "metadata": {
